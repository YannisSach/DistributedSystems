import java.net.*;
import java.io.*;
import java.util.*;
import java.util.concurrent.TimeUnit;

public class DHT {

	
	public static void main (String[] args) throws IOException{
	//	Simulation.debug(Util.SIMPLE+1);
		
		/*for (int ServerType = Util.SIMPLE; ServerType <= Util.LAZY; ServerType++){

			
			Metric k3 = Simulation.Case2(ServerType, 3);
			System.out.println("ServerType: " + ServerType + " k: ");
			System.out.println("Time: " + k3.time);
			System.out.println("Lines: " + k3.lines);
			System.out.println("Throughput(lines/s): " + (k3.lines/k3.time));
			System.out.println("Chain K:" + ChainServer.k);
			System.out.println("Lazy K:" + LazyServer.k);
			Util.wait(1);
			Metric k5 = Simulation.Case2(ServerType, 5);
			System.out.println("ServerType: " + ServerType + " k: " + 5);
			System.out.println("Time: " + k5.time);
			System.out.println("Lines: " + k5.lines);
			System.out.println("Throughput(lines/s): " + (k5.lines/k5.time));
			System.out.println("Chain K:" + ChainServer.k);
			System.out.println("Lazy K:" + LazyServer.k);
		
			
		}*/
		
		for (int i = 0; i < 10 ; i++){
			
		}
		
	}

}
